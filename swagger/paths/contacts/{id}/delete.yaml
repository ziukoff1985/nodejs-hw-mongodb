tags:
  - Contacts
summary: Delete contact by ID
operationId: deleteContactById
description: Remove a contact from the database by its unique identifier (ID)
security:
  - bearerAuth: []
parameters:
  - in: path
    name: contactId
    required: true
    schema:
      type: string
      example: '67dd4fb6c1e46079abca809c'
responses:
  '204':
    description: Contact deleted successfully
  '400':
    description: Bad request error
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 400
            message:
              type: string
              example: BadRequestError
            data:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
                  example: 'Invalid request data: contactId must be a valid ObjectId'
        examples:
          badRequest:
            summary: Invalid contact ID
            value:
              status: 400
              message: BadRequestError
              data:
                message: 'Invalid request data: contactId must be a valid ObjectId'
  '401':
    description: Unauthorized error
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 401
            message:
              type: string
              example: UnauthorizedError
            data:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
                  example: 'Access token is expired, invalid or not provided'
        examples:
          unauthorized:
            summary: Access token expired
            value:
              status: 401
              message: UnauthorizedError
              data:
                message: 'Access token is expired, invalid or not provided'
  '404':
    description: Not found error
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 404
            message:
              type: string
              example: NotFoundError
            data:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
                  example: 'Contact not found or you do not have permission'
        examples:
          notFound:
            summary: Contact not found
            value:
              status: 404
              message: NotFoundError
              data:
                message: 'Contact not found or you do not have permission'
  '500':
    $ref: '../../../components/responses/500.yaml'
